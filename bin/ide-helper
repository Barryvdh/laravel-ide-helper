#!/usr/bin/env php
<?php

/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader
| for our application. We just need to utilize it! We'll require it
| into the script here so that we do not have to worry about the
| loading of any our classes "manually". Feels great to relax.
|
*/

$basePath = '.';

if (!is_dir($basePath.'/bootstrap')) {
    exit("Please run the command in your root directory of your project.\n");
}

require $basePath.'/bootstrap/autoload.php';

$app = require_once $basePath.'/bootstrap/app.php';

$app['events']->listen('bootstrapped: *', function ($app) {
    if (!$app->getProvider(Barryvdh\LaravelIdeHelper\IdeHelperServiceProvider::class)
        && $app->bound('config')
        && $app->bound('files')
        && $app->bound('view')
    ) {
        $app->register(Barryvdh\LaravelIdeHelper\IdeHelperServiceProvider::class);
    }
});
/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

$kernel = $app->make('Illuminate\Contracts\Console\Kernel');

$status = $kernel->handle(
    $input = new Symfony\Component\Console\Input\ArgvInput,
    new Symfony\Component\Console\Output\ConsoleOutput
);


/*
|--------------------------------------------------------------------------
| Shutdown The Application
|--------------------------------------------------------------------------
|
| Once Artisan has finished running. We will fire off the shutdown events
| so that any final work may be done by the application before we shut
| down the process. This is the last thing to happen to the request.
|
*/

$kernel->terminate($input, $status);

exit($status);
